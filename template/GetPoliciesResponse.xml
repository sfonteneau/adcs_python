<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing">
  <s:Header>
    <a:Action s:mustUnderstand="1">http://schemas.microsoft.com/windows/pki/2009/01/enrollmentpolicy/IPolicy/GetPoliciesResponse</a:Action>
    <a:RelatesTo>urn:uuid:{{ uuid_request }}</a:RelatesTo>
    <ActivityId CorrelationId="{{ uuid_random }}" xmlns="http://schemas.microsoft.com/2004/09/ServiceModel/Diagnostics">00000000-0000-0000-0000-000000000000</ActivityId>
  </s:Header>
  <s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <GetPoliciesResponse xmlns="http://schemas.microsoft.com/windows/pki/2009/01/enrollmentpolicy">
      <response>
        <policyID>{{ policyid }}</policyID>
        <policyFriendlyName/>
        <nextUpdateHours>{{ next_update_hours }}</nextUpdateHours>
        <policiesNotChanged xsi:nil="true"/>
        <policies>
          {% for t in templates %}
          <policy>
            <policyOIDReference>{{ t.__policy_oid_reference }}</policyOIDReference>
            <cAs>
              {% if t.__ca_refids %}
                {% for refid in t.__ca_refids %}
                <cAReference>{{ refid }}</cAReference>
                {% endfor %}
              {% else %}
                <cAReference>{{ cas[0].__refid }}</cAReference>
              {% endif %}
            </cAs>
            <attributes>
              <commonName>{{ t.common_name }}</commonName>
              <policySchema>{{ t.policy_schema }}</policySchema>
              <certificateValidity>
                <validityPeriodSeconds>{{ t.validity.validity_seconds }}</validityPeriodSeconds>
                <renewalPeriodSeconds>{{ t.validity.renewal_seconds }}</renewalPeriodSeconds>
              </certificateValidity>
              <permission>
                <enroll>{{ 'true' if t.permissions.enroll else 'false' }}</enroll>
                <autoEnroll>{{ 'true' if t.permissions.auto_enroll else 'false' }}</autoEnroll>
              </permission>
              <privateKeyAttributes>
                <minimalKeyLength>{{ t.private_key_attributes.minimal_key_length }}</minimalKeyLength>
                <keySpec>{{ t.private_key_attributes.key_spec }}</keySpec>
                <keyUsageProperty xsi:nil="true"/>
                <permissions xsi:nil="true"/>
                <algorithmOIDReference xsi:nil="{{ 'false' if t.private_key_attributes.algorithm_oid_reference else 'true' }}">
                  {% if t.private_key_attributes.algorithm_oid_reference %}{{ t.private_key_attributes.algorithm_oid_reference }}{% endif %}
                </algorithmOIDReference>
                <cryptoProviders>
                  {% for p in t.private_key_attributes.crypto_providers %}
                  <provider>{{ p }}</provider>
                  {% endfor %}
                </cryptoProviders>
              </privateKeyAttributes>
              <revision>
                <majorRevision>{{ t.revision.major }}</majorRevision>
                <minorRevision>{{ t.revision.minor }}</minorRevision>
              </revision>
              <supersededPolicies xsi:nil="true"/>
              <privateKeyFlags>{{ t.flags.private_key_flags }}</privateKeyFlags>
              <subjectNameFlags>{{ t.flags.subject_name_flags }}</subjectNameFlags>
              <enrollmentFlags>{{ t.flags.enrollment_flags }}</enrollmentFlags>
              <generalFlags>{{ t.flags.general_flags }}</generalFlags>
              <hashAlgorithmOIDReference xsi:nil="{{ 'false' if t.flags.hash_algorithm_oid_reference else 'true' }}">
                {% if t.flags.hash_algorithm_oid_reference %}{{ t.flags.hash_algorithm_oid_reference }}{% endif %}
              </hashAlgorithmOIDReference>
              <rARequirements xsi:nil="true"/>
              <keyArchivalAttributes xsi:nil="true"/>
              <extensions>
                {% for ext in t.required_extensions %}
                <extension>
                  <oIDReference>{{ ext.__oid_reference }}</oIDReference>
                  <critical>{{ 'true' if ext.critical else 'false' }}</critical>
                  <value>{{ ext.value_b64 }}</value>
                </extension>
                {% endfor %}
              </extensions>
            </attributes>
          </policy>
          {% endfor %}
        </policies>
      </response>
      <cAs>
        {% for ca in cas %}
        <cA>
          <uris>
            <cAURI>
              <clientAuthentication>2</clientAuthentication>
              <uri>{{ hosturl }}{{ ca.__ces_path }}</uri>
              <priority>{{ loop.index }}</priority>
              <renewalOnly>false</renewalOnly>
            </cAURI>
          </uris>
          <certificate>{{ ca.__certificate_b64 }}</certificate>
          <enrollPermission>{{ 'true' if ca.enroll_permission else 'false' }}</enrollPermission>
          <cAReferenceID>{{ ca.__refid }}</cAReferenceID>
        </cA>
        {% endfor %}
      </cAs>
      <oIDs>
        {% for o in oids %}
        <oID>
          <value>{{ o.value }}</value>
          <group>{{ o.group }}</group>
          <oIDReferenceID>{{ o.__refid }}</oIDReferenceID>
          <defaultName>{{ o.default_name }}</defaultName>
        </oID>
        {% endfor %}
      </oIDs>
    </GetPoliciesResponse>
  </s:Body>
</s:Envelope>

